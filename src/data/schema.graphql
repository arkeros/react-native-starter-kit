schema {
  query: Query
}

type Content {
  path: String!
  title: String!
  content: String!
  component: String!
}

type NewsItem {
  title: String!
  link: String!
  author: String
  publishedDate: String!
  contentSnippet: String
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  viewer: User
  content(path: String!): Content
  news: [NewsItem]
}

type Todo {
  id: ID!
  text: String
  completed: Boolean
}

type TodoConnection {
  pageInfo: PageInfo!
  edges: [TodoEdge]
}

type TodoEdge {
  node: Todo
  cursor: String!
}

type User {
  id: ID!
  email: String
  content(path: String!): Content
  news: [NewsItem]
  todos(after: String, first: Int, before: String, last: Int): TodoConnection
}
